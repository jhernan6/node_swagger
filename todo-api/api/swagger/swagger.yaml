swagger: "2.0"
info:
  version: "0.0.1"
  title: Todo API
# during dev, should point to your local machine
host: localhost:10010
# basePath prefixes all resource paths 
basePath: /
# 
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
paths:
  /:
    get:
      description: "This endpoint returns all todos available in the database"
      operationId: "GetAlllTodos"
      parameters: []
      responses:
        200:
          description: "An array of todos"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Todo"
      x-swagger-router-controller: "GetAllTodos"
    post:
      description: "Add a new Todo"
      operationId: "AddTodo"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "todo"
        description: "the Todo to be added"
        required: true
        schema:
          $ref: "#/definitions/Todo"
      responses:
        200:
          description: "Successful Todo added"
      x-swagger-router-controller: "AddTodo"
  /todo/{id}:
    get:
      description: "Retrieve a single todo item by ID"
      operationId: "FindTodoById"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of the todo to get"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "Todo response"
          schema:
            $ref: "#/definitions/Todo"
      x-swagger-router-controller: "FindTodoById"
    delete:
      description: "Delete a todo by Id"
      operationId: "DeleteTodoById"
      parameters:
      - name: "id"
        in: "path"
        description: "Id of the todo that will be deleted"
        required: true
        type: "integer"
        format: "int64"
      responses:
        204:
          description: "Todo deleted"
      x-swagger-router-controller: "DeleteTodoById"
    put:
      description: "Update a specific todo task by ID"
      operationId: "UpdateTodoById"
      parameters:
      - name: "id"
        in: "path"
        description: "Id of the todo task being updated"
        required: true
        type: "integer"
        format: "int64"
      - name: "updated_todo"
        in: "body"
        description: "The updated todo task"
        required: true
        schema:
          $ref: "#/definitions/Todo"
      responses:
        200:
          description: "Todo updated"
        400:
          description: "Error while updating todo task"
      x-swagger-router-controller: "UpdateTodoById"
  /swagger:
    x-swagger-pipe: swagger_raw
# complex objects have schema definitions
definitions:
  Todo:
    type: "object"
    properties:
      todo_id:
        type: "integer"
        description: "ID for each todo task"
      todo:
        type: "string"
        description: "Task to be completed"
      date_created:
        type: "string"
        format: "date-type"
        description: "Timestamp when the task was created set by the server"
      author:
        type: "string"
        description: "Creator or owner of todo task"
      due_date:
        type : "string"
        format: "date-type"
        description: "When the todo task is due"
      completed:
        type: "boolean"
        description: "Indicates if the todo task is complete"